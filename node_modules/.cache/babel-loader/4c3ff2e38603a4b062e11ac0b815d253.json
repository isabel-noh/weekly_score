{"ast":null,"code":"var _jsxFileName = \"/Users/isabel_noh/sparta_react/weekly_score/src/Daily.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { useParams } from 'react-router-dom';\nimport styled from 'styled-components';\nimport { Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Daily = props => {\n  _s();\n\n  const my_day = useParams();\n  console.log(my_day);\n  React.useEffect(() => {}, []); //React.useEffect(() => {}, []); 1.먼저 화살표 함수를 실행한다. > 리랜더링 > 화살표 함수를 재실행하기 전에 배열(dependancy Array)안에 바뀐 값이 있는지 확인하고, 바뀐 값이 있을 때에만 화살표 함수 실행한다.\n  //dependancy Array가 없을 경우 componentDidMount처럼 역할을 수행한다\n\n  return /*#__PURE__*/_jsxDEV(MyWrap, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      style: {\n        margin: \"40px auto\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(DateWrap, {\n        children: [`${my_day.day}`, \"\\uC694\\uC77C\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 17\n      }, this), \"\\uD3C9\\uC810 \\uB0A8\\uAE30\\uAE30 \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Circle, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Circle, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 34\n      }, this), /*#__PURE__*/_jsxDEV(Circle, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 51\n      }, this), /*#__PURE__*/_jsxDEV(Circle, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 68\n      }, this), /*#__PURE__*/_jsxDEV(Circle, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 85\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/\",\n        children: /*#__PURE__*/_jsxDEV(LinkBtn, {\n          children: \"\\uD3C9\\uC810 \\uB0A8\\uAE30\\uAE30\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 30\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Daily, \"AstLrce0EKNVTGceMql3vC/JirY=\", false, function () {\n  return [useParams];\n});\n\n_c = Daily;\nconst DateWrap = styled.span`\n    background-color:orange;\n    border-radius: 5px;\n    color: white;\n    padding: 2px 10px;\n`;\n_c2 = DateWrap;\nconst MyWrap = styled.div`\n    align-items: center;\n    text-align: center;\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n\n`;\n_c3 = MyWrap;\nconst Circle = styled.div`\n\n    width : 30px;\n    height : 30px;\n    border-radius: 50%;\n    background-color: #eee;\n\n    float: left;\n    margin: 0px 5px;\n`;\n_c4 = Circle;\nconst LinkBtn = styled.button`\n    margin-top: 40px;\n    width: 200px;\n    height: 40px;\n    border: transparent;\n    border-radius: 5px;\n    background-color: purple;\n    color: white;\n`;\n_c5 = LinkBtn;\nexport default Daily;\n\nvar _c, _c2, _c3, _c4, _c5;\n\n$RefreshReg$(_c, \"Daily\");\n$RefreshReg$(_c2, \"DateWrap\");\n$RefreshReg$(_c3, \"MyWrap\");\n$RefreshReg$(_c4, \"Circle\");\n$RefreshReg$(_c5, \"LinkBtn\");","map":{"version":3,"sources":["/Users/isabel_noh/sparta_react/weekly_score/src/Daily.js"],"names":["React","useHistory","useParams","styled","Link","Daily","props","my_day","console","log","useEffect","margin","day","DateWrap","span","MyWrap","div","Circle","LinkBtn","button"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,SAASC,SAAT,QAA0B,kBAA1B;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,IAAT,QAAqB,kBAArB;;;AAGA,MAAMC,KAAK,GAAIC,KAAD,IAAW;AAAA;;AACrB,QAAMC,MAAM,GAAGL,SAAS,EAAxB;AACAM,EAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;AAEAP,EAAAA,KAAK,CAACU,SAAN,CAAgB,MAAM,CAAE,CAAxB,EAA0B,EAA1B,EAJqB,CAKrB;AACA;;AAEA,sBACI,QAAC,MAAD;AAAA,4BACI;AAAI,MAAA,KAAK,EAAE;AAACC,QAAAA,MAAM,EAAE;AAAT,OAAX;AAAA,8BACI,QAAC,QAAD;AAAA,mBAAY,GAAEJ,MAAM,CAACK,GAAI,EAAzB;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAII;AAAA,8BACI,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,cADJ,eACqB,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,cADrB,eACsC,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,cADtC,eACuD,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,cADvD,eACwE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,cADxE;AAAA;AAAA;AAAA;AAAA;AAAA,YAJJ,eAOI;AAAA,6BACI,QAAC,IAAD;AAAM,QAAA,EAAE,EAAC,GAAT;AAAA,+BAAa,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAb;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAPJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAcH,CAtBD;;GAAMP,K;UACaH,S;;;KADbG,K;AAuBN,MAAMQ,QAAQ,GAAGV,MAAM,CAACW,IAAK;AAC7B;AACA;AACA;AACA;AACA,CALA;MAAMD,Q;AAMN,MAAME,MAAM,GAAGZ,MAAM,CAACa,GAAI;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA,CAPA;MAAMD,M;AAQN,MAAME,MAAM,GAAGd,MAAM,CAACa,GAAI;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CATA;MAAMC,M;AAUN,MAAMC,OAAO,GAAGf,MAAM,CAACgB,MAAO;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CARA;MAAMD,O;AASN,eAAeb,KAAf","sourcesContent":["import React from 'react'\nimport { useHistory } from 'react-router-dom'\nimport { useParams } from 'react-router-dom'\nimport styled from 'styled-components'\nimport { Link } from 'react-router-dom'\n\n\nconst Daily = (props) => {\n    const my_day = useParams();\n    console.log(my_day)\n\n    React.useEffect(() => {}, [])\n    //React.useEffect(() => {}, []); 1.먼저 화살표 함수를 실행한다. > 리랜더링 > 화살표 함수를 재실행하기 전에 배열(dependancy Array)안에 바뀐 값이 있는지 확인하고, 바뀐 값이 있을 때에만 화살표 함수 실행한다.\n    //dependancy Array가 없을 경우 componentDidMount처럼 역할을 수행한다\n\n    return (\n        <MyWrap>\n            <h1 style={{margin: \"40px auto\"}}>\n                <DateWrap>{`${my_day.day}`}요일</DateWrap>평점 남기기 {/* DateWrap: styled.span */}\n            </h1>\n            <div>\n                <Circle></Circle><Circle></Circle><Circle></Circle><Circle></Circle><Circle></Circle>\n            </div>\n            <div>\n                <Link to=\"/\"><LinkBtn>평점 남기기</LinkBtn></Link>\n            </div>\n            \n        </MyWrap>\n    )\n}\nconst DateWrap = styled.span`\n    background-color:orange;\n    border-radius: 5px;\n    color: white;\n    padding: 2px 10px;\n`\nconst MyWrap = styled.div`\n    align-items: center;\n    text-align: center;\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n\n`\nconst Circle = styled.div`\n\n    width : 30px;\n    height : 30px;\n    border-radius: 50%;\n    background-color: #eee;\n\n    float: left;\n    margin: 0px 5px;\n`\nconst LinkBtn = styled.button`\n    margin-top: 40px;\n    width: 200px;\n    height: 40px;\n    border: transparent;\n    border-radius: 5px;\n    background-color: purple;\n    color: white;\n`\nexport default Daily"]},"metadata":{},"sourceType":"module"}